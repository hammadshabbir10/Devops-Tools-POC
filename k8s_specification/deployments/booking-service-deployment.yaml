apiVersion: apps/v1
kind: Deployment
metadata:
  name: booking-service
  namespace: movie-booking
spec:
  replicas: 2
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: booking-service
  template:
    metadata:
      labels:
        app: booking-service
    spec:
      initContainers:
      - name: wait-for-mysql
        image: busybox
        command: ['sh', '-c', 'until nc -z mysql.movie-booking.svc.cluster.local 3306; do sleep 2; echo "Waiting for MySQL..."; done']
      containers:
      - name: booking-service
        image: 22i1140/microservices-booking-service:v1
        imagePullPolicy: IfNotPresent
        env:
        - name: DB_HOST
          value: "mysql.movie-booking.svc.cluster.local"
        - name: DB_PORT
          value: "3306"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: DB_PASSWORD
        - name: DB_NAME
          value: "movie_booking"
        - name: FLASK_ENV
          value: "production"
        ports:
        - containerPort: 5003
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 5003
          initialDelaySeconds: 30
          periodSeconds: 10