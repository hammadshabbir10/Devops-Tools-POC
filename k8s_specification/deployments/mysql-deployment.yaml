apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: movie-booking
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      initContainers:
      - name: clean-data-dir
        image: busybox
        command: ['sh', '-c', 'rm -rf /var/lib/mysql/* && ls -la /var/lib/mysql']
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
      - name: init-db
        image: busybox
        command: ['sh', '-c', 'cp /docker-entrypoint-initdb.d/init.sql /init-scripts/ && echo "Init file copied"']
        volumeMounts:
        - name: init-script
          mountPath: /docker-entrypoint-initdb.d
        - name: init-scripts-dir
          mountPath: /init-scripts
      containers:
      - name: mysql
        image: mysql:8.0.42
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: MYSQL_ROOT_PASSWORD
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
        - name: init-scripts-dir
          mountPath: /docker-entrypoint-initdb.d
        readinessProbe:
          exec:
            command: ["mysqladmin", "ping", "-uroot", "-p$(MYSQL_ROOT_PASSWORD)"]
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 5
      volumes:
      - name: mysql-data
        persistentVolumeClaim:
          claimName: mysql-pvc
      - name: init-script
        configMap:
          name: mysql-init
          items:
          - key: init.sql
            path: init.sql
      - name: init-scripts-dir
        emptyDir: {}